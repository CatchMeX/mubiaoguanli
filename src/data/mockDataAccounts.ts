// 往来管理模块的模拟数据
import { AccountsRecord, SettlementRecord, AccountsStatistics } from '@/types/accounts';
import { customers } from '@/data/mockDatasr';
import { expenseSuppliers } from '@/data/mockDatafy';

// 计算账龄分类
const getAgingCategory = (days: number): '30天内' | '31-60天' | '61-90天' | '90+天' => {
  if (days <= 30) return '30天内';
  if (days <= 60) return '31-60天';
  if (days <= 90) return '61-90天';
  return '90+天';
};

// 计算账龄天数
const calculateAgingDays = (occurredDate: string, dueDate?: string): number => {
  const today = new Date();
  const due = dueDate ? new Date(dueDate) : new Date(occurredDate);
  const diffTime = today.getTime() - due.getTime();
  return Math.max(0, Math.ceil(diffTime / (1000 * 60 * 60 * 24)));
};

// 往来记录数据
export const accountsRecords: AccountsRecord[] = [
  {
    id: '1',
    recordNumber: 'AR-2024-001',
    counterparty: {
      id: customers[0].id,
      name: customers[0].name,
      code: customers[0].code,
      type: 'customer',
    },
    documentNumber: 'INV-2024-001',
    documentType: 'invoice',
    occurredDate: '2024-12-01',
    amount: 500000,
    type: 'receivable',
    settledAmount: 300000,
    balance: 200000,
    status: 'pending',
    agingDays: calculateAgingDays('2024-12-01', '2024-12-31'),
    agingCategory: getAgingCategory(calculateAgingDays('2024-12-01', '2024-12-31')),
    dueDate: '2024-12-31',
    description: '华为ERP系统销售应收款',
    department: { id: '2', name: '销售部' },
    createdBy: { id: '2', name: '李四' },
    createdAt: '2024-12-01',
    updatedAt: '2024-12-10',
  },
  {
    id: '2',
    recordNumber: 'AR-2024-002',
    counterparty: {
      id: customers[1].id,
      name: customers[1].name,
      code: customers[1].code,
      type: 'customer',
    },
    documentNumber: 'INV-2024-002',
    documentType: 'invoice',
    occurredDate: '2024-11-25',
    amount: 300000,
    type: 'receivable',
    settledAmount: 300000,
    balance: 0,
    status: 'settled',
    agingDays: 0,
    agingCategory: '30天内',
    dueDate: '2024-12-25',
    description: '腾讯系统集成服务应收款',
    department: { id: '1', name: '技术部' },
    createdBy: { id: '1', name: '张三' },
    createdAt: '2024-11-25',
    updatedAt: '2024-11-26',
  },
  {
    id: '3',
    recordNumber: 'AR-2024-003',
    counterparty: {
      id: customers[2].id,
      name: customers[2].name,
      code: customers[2].code,
      type: 'customer',
    },
    documentNumber: 'INV-2024-003',
    documentType: 'invoice',
    occurredDate: '2024-12-05',
    amount: 800000,
    type: 'receivable',
    settledAmount: 0,
    balance: 800000,
    status: 'pending',
    agingDays: calculateAgingDays('2024-12-05', '2025-01-05'),
    agingCategory: getAgingCategory(calculateAgingDays('2024-12-05', '2025-01-05')),
    dueDate: '2025-01-05',
    description: '阿里巴巴CRM系统应收款',
    department: { id: '2', name: '销售部' },
    createdBy: { id: '3', name: '王五' },
    createdAt: '2024-12-05',
    updatedAt: '2024-12-06',
  },
  {
    id: '4',
    recordNumber: 'AR-2024-004',
    counterparty: {
      id: customers[3].id,
      name: customers[3].name,
      code: customers[3].code,
      type: 'customer',
    },
    documentNumber: 'INV-2024-004',
    documentType: 'invoice',
    occurredDate: '2024-11-30',
    amount: 600000,
    type: 'receivable',
    settledAmount: 200000,
    balance: 400000,
    status: 'pending',
    agingDays: calculateAgingDays('2024-11-30', '2024-12-30'),
    agingCategory: getAgingCategory(calculateAgingDays('2024-11-30', '2024-12-30')),
    dueDate: '2024-12-30',
    description: '中国银行财务系统应收款',
    department: { id: '2', name: '销售部' },
    createdBy: { id: '5', name: '钱七' },
    createdAt: '2024-11-30',
    updatedAt: '2024-12-01',
  },
  {
    id: '5',
    recordNumber: 'AR-2024-005',
    counterparty: {
      id: customers[5].id,
      name: customers[5].name,
      code: customers[5].code,
      type: 'customer',
    },
    documentNumber: 'INV-2024-006',
    documentType: 'invoice',
    occurredDate: '2024-12-01',
    amount: 150000,
    type: 'receivable',
    settledAmount: 0,
    balance: 150000,
    status: 'overdue',
    agingDays: calculateAgingDays('2024-12-01', '2024-11-30'),
    agingCategory: getAgingCategory(calculateAgingDays('2024-12-01', '2024-11-30')),
    dueDate: '2024-11-30',
    description: '小米企业培训服务应收款',
    department: { id: '5', name: '市场部' },
    createdBy: { id: '14', name: '杨十六' },
    createdAt: '2024-12-01',
    updatedAt: '2024-12-01',
  },
  {
    id: '6',
    recordNumber: 'AP-2024-001',
    counterparty: {
      id: expenseSuppliers[0].id,
      name: expenseSuppliers[0].name,
      code: expenseSuppliers[0].code,
      type: 'supplier',
    },
    documentNumber: 'PO-2024-001',
    documentType: 'invoice',
    occurredDate: '2024-11-20',
    amount: 80000,
    type: 'payable',
    settledAmount: 80000,
    balance: 0,
    status: 'settled',
    agingDays: 0,
    agingCategory: '30天内',
    dueDate: '2024-12-20',
    description: '办公用品采购应付款',
    department: { id: '1', name: '行政部' },
    createdBy: { id: '6', name: '孙八' },
    createdAt: '2024-11-20',
    updatedAt: '2024-12-15',
  },
  {
    id: '7',
    recordNumber: 'AP-2024-002',
    counterparty: {
      id: expenseSuppliers[1].id,
      name: expenseSuppliers[1].name,
      code: expenseSuppliers[1].code,
      type: 'supplier',
    },
    documentNumber: 'PO-2024-002',
    documentType: 'invoice',
    occurredDate: '2024-12-01',
    amount: 120000,
    type: 'payable',
    settledAmount: 0,
    balance: 120000,
    status: 'pending',
    agingDays: calculateAgingDays('2024-12-01', '2024-12-31'),
    agingCategory: getAgingCategory(calculateAgingDays('2024-12-01', '2024-12-31')),
    dueDate: '2024-12-31',
    description: '软件开发服务应付款',
    department: { id: '4', name: '技术部' },
    createdBy: { id: '7', name: '周九' },
    createdAt: '2024-12-01',
    updatedAt: '2024-12-01',
  },
  {
    id: '8',
    recordNumber: 'AP-2024-003',
    counterparty: {
      id: expenseSuppliers[2].id,
      name: expenseSuppliers[2].name,
      code: expenseSuppliers[2].code,
      type: 'supplier',
    },
    documentNumber: 'PO-2024-003',
    documentType: 'invoice',
    occurredDate: '2024-10-15',
    amount: 200000,
    type: 'payable',
    settledAmount: 100000,
    balance: 100000,
    status: 'overdue',
    agingDays: calculateAgingDays('2024-10-15', '2024-11-15'),
    agingCategory: getAgingCategory(calculateAgingDays('2024-10-15', '2024-11-15')),
    dueDate: '2024-11-15',
    description: '市场推广服务应付款',
    department: { id: '3', name: '市场部' },
    createdBy: { id: '8', name: '吴十' },
    createdAt: '2024-10-15',
    updatedAt: '2024-11-20',
  },
];

// 核销记录数据
export const settlementRecords: SettlementRecord[] = [
  {
    id: '1',
    accountsRecordId: '1',
    settlementNumber: 'SET-2024-001',
    settlementDate: '2024-12-10',
    amount: 300000,
    method: 'bank_transfer',
    description: '华为ERP项目首期款收款',
    createdBy: { id: '2', name: '李四' },
    createdAt: '2024-12-10',
  },
  {
    id: '2',
    accountsRecordId: '2',
    settlementNumber: 'SET-2024-002',
    settlementDate: '2024-11-26',
    amount: 300000,
    method: 'bank_transfer',
    description: '腾讯系统集成项目全款收款',
    createdBy: { id: '1', name: '张三' },
    createdAt: '2024-11-26',
  },
  {
    id: '3',
    accountsRecordId: '4',
    settlementNumber: 'SET-2024-003',
    settlementDate: '2024-12-01',
    amount: 200000,
    method: 'bank_transfer',
    description: '中行财务系统项目首期款收款',
    createdBy: { id: '5', name: '钱七' },
    createdAt: '2024-12-01',
  },
  {
    id: '4',
    accountsRecordId: '6',
    settlementNumber: 'SET-2024-004',
    settlementDate: '2024-12-15',
    amount: 80000,
    method: 'bank_transfer',
    description: '办公用品采购款支付',
    createdBy: { id: '6', name: '孙八' },
    createdAt: '2024-12-15',
  },
  {
    id: '5',
    accountsRecordId: '8',
    settlementNumber: 'SET-2024-005',
    settlementDate: '2024-11-20',
    amount: 100000,
    method: 'bank_transfer',
    description: '市场推广服务部分款项支付',
    createdBy: { id: '8', name: '吴十' },
    createdAt: '2024-11-20',
  },
];

// 往来统计数据
export const accountsStatistics: AccountsStatistics = {
  totalReceivable: accountsRecords.filter(r => r.type === 'receivable').reduce((sum, r) => sum + r.amount, 0),
  totalPayable: accountsRecords.filter(r => r.type === 'payable').reduce((sum, r) => sum + r.amount, 0),
  totalSettledReceivable: accountsRecords.filter(r => r.type === 'receivable').reduce((sum, r) => sum + r.settledAmount, 0),
  totalSettledPayable: accountsRecords.filter(r => r.type === 'payable').reduce((sum, r) => sum + r.settledAmount, 0),
  totalPendingReceivable: accountsRecords.filter(r => r.type === 'receivable' && r.status === 'pending').reduce((sum, r) => sum + r.balance, 0),
  totalPendingPayable: accountsRecords.filter(r => r.type === 'payable' && r.status === 'pending').reduce((sum, r) => sum + r.balance, 0),
  totalOverdueReceivable: accountsRecords.filter(r => r.type === 'receivable' && r.status === 'overdue').reduce((sum, r) => sum + r.balance, 0),
  totalOverduePayable: accountsRecords.filter(r => r.type === 'payable' && r.status === 'overdue').reduce((sum, r) => sum + r.balance, 0),
  agingDistribution: {
    within30: accountsRecords.filter(r => r.agingCategory === '30天内').length,
    within60: accountsRecords.filter(r => r.agingCategory === '31-60天').length,
    within90: accountsRecords.filter(r => r.agingCategory === '61-90天').length,
    over90: accountsRecords.filter(r => r.agingCategory === '90+天').length,
  },
  topCustomers: [
    {
      customer: { id: customers[2].id, name: customers[2].name },
      totalAmount: 800000,
      pendingAmount: 800000,
    },
    {
      customer: { id: customers[0].id, name: customers[0].name },
      totalAmount: 500000,
      pendingAmount: 200000,
    },
    {
      customer: { id: customers[3].id, name: customers[3].name },
      totalAmount: 600000,
      pendingAmount: 400000,
    },
  ],
  topSuppliers: [
    {
      supplier: { id: expenseSuppliers[2].id, name: expenseSuppliers[2].name },
      totalAmount: 200000,
      pendingAmount: 100000,
    },
    {
      supplier: { id: expenseSuppliers[1].id, name: expenseSuppliers[1].name },
      totalAmount: 120000,
      pendingAmount: 120000,
    },
    {
      supplier: { id: expenseSuppliers[0].id, name: expenseSuppliers[0].name },
      totalAmount: 80000,
      pendingAmount: 0,
    },
  ],
};
